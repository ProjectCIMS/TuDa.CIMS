name: CIMS Build and Deploy

on:
  push:
    branches: [ "main" ]

permissions:
  packages: write

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

  build-and-push-image:
    runs-on: ubuntu-latest
    needs:
      - run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          use: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Api Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/TuDa.CIMS.Api/Dockerfile
          platforms: linux/arm64,linux/amd64
          push: true
          tags: |
            ghcr.io/projectcims/cims-api:latest
            ghcr.io/projectcims/cims-api:${{ github.sha }}
          secret-envs: "ConnectionStrings:CIMS=${{ secrets.DB_CONNECTION_STRING }}"

      - name: Build and push Web Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/TuDa.CIMS.Web/Dockerfile
          platforms: linux/arm64,linux/amd64
          push: true
          tags: |
            ghcr.io/projectcims/cims-web:latest
            ghcr.io/projectcims/cims-web:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: create env file
        run: |
          echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile

      - name: Docker Stack Deploy
        uses: cssnr/stack-deploy-action@v1
        with:
          name: cims
          file: docker-stack.yml
          host: ${{ secrets.DEV_IP_ADDRESS }}
          user: deploy
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./envfile
