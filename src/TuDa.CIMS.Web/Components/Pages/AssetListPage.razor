@page "/asset-list"
@using TuDa.CIMS.Shared.Entities
@using TuDa.CIMS.Web.Components.Dashboard
@using TuDa.CIMS.Web.Components.Dashboard.Dialogs
@using TuDa.CIMS.Web.Services

<div class="container-fluid ">
    <div class="row mt-5">
        <AssetList AddButtonPressed="CreateAssetItem"
                   EditButtonPressed="EditAssetItem"/>
    </div>
</div>

@code
{
    [Inject] private ILogger<AssetListPage> _logger { get; set; } = null!;
    [Inject] public required IDialogService DialogService { get; set; }
    private IAssetItemApi _assetItemApi;

    public AssetListPage(IAssetItemApi assetItemApi)
    {
        _assetItemApi = assetItemApi;
    }

    private async Task CreateAssetItem()
    {
        _logger.LogInformation("Added");
        var options = new DialogOptions { CloseOnEscapeKey = true };
        await DialogService.ShowAsync<AssetItemDialog>("Create Item", options);
    }


    private async Task EditAssetItem(AssetItem assetItem)
    {
        _logger.LogInformation("Edit {Item.Name}", assetItem.Name);
        var parameters = new DialogParameters<AssetItemEditDialog>
        {
            { "Item", assetItem },
            { "OnDeleteRequested", EventCallback.Factory.Create<AssetItem>(this, DeleteItem) },
            { "OnStateHasChanged", EventCallback.Factory.Create(this, StateHasChanged)}
        };

        var options = new DialogOptions { CloseOnEscapeKey = true };

        await DialogService.ShowAsync<AssetItemEditDialog>("Edit Item", parameters, options);
    }

    private async Task DeleteItem(AssetItem assetItem)
    {
        await _assetItemApi.RemoveAsync(assetItem.Id);
    }

}
