@using TuDa.CIMS.Shared.Entities
@using TuDa.CIMS.Shared.Entities.Enums

@* AssetItemCreateForm *@


    <!-- Modal Body -->
        <MudChipSet T="Color" @bind-SelectedValue="SelectedColor" CheckMark SelectionMode="@SelectionMode" Class="my-4">
            <MudChip Text="purple" Color="Color.Primary" Value="@Color.Primary" @onclick="SwitchToChemical">
                Chemical
            </MudChip>
            <MudChip Text="pink" Color="Color.Secondary" Value="@Color.Secondary" @onclick="SwitchToConsumable">
                Consumable
            </MudChip>
        </MudChipSet>

        <MudGrid>
            <MudItem xs="12" md="6">
                <AssetItemForm/>
            </MudItem>

            <!-- Which Form to Choose -->
            <MudItem xs="12" md="6">
                @if (_isChemical)
                {
                    <ChemicalItemForm/>
                }
                else
                {
                    <ConsumableItemForm/>
                }
            </MudItem>
        </MudGrid>


    @code {
        public SelectionMode SelectionMode = SelectionMode.SingleSelection;
        public Color SelectedColor;

    /// <summary>
    /// Temporary Values to bind when inputting
    /// </summary>
    protected string Name = "";
    protected string Shop = "";
    protected string ItemNumber = "";
    protected string Note = "";
    protected string Cas = "";
    protected string Manufacturer = "";
    protected string SerialNumber = "";
    protected double Price = 0;
    protected int ConsumableAmount = 0;
    protected string Purity = "";
    protected double BindingSize = 0;

    /// <summary>
    /// Boolean to differentiate between Chemical and Consumable form
    /// </summary>
    private bool _isChemical = true;

    /// <summary>
    /// For the Extraction of a Chemical Item
    /// </summary>
    private Chemical _createdChemicalItem = new Chemical()
    {
        Name = "",
        Shop = "",
        ItemNumber = "",
        Note = "",
        Id = Guid.NewGuid(),
        Room = new Room() { Name = "", Id = Guid.NewGuid() },
        Price = 0,
        Hazards = new List<Hazard>(),
        Cas = "",
        Purity = "",
        PriceUnit = MeasurementUnits.Piece,
        BindingSize = 0
    };

    /// <summary>
    /// For the Extraction of a Consumable Item
    /// </summary>
    private Consumable _createdConsumableItem = new Consumable()
    {
        Name = "",
        Shop = "",
        ItemNumber = "",
        Note = "",
        Id = Guid.NewGuid(),
        Room = new Room() { Name = "", Id = Guid.NewGuid() },
        Price = 0,
        Manufacturer = "",
        SerialNumber = "",
        Amount = 0
    };

    /// <summary>
    /// Method to switch to a Substance
    /// </summary>
    private void SwitchToChemical()
    {
        _isChemical = true;
    }

    /// <summary>
    /// Method to switch to a Consumable
    /// </summary>
    private void SwitchToConsumable()
    {
        _isChemical = false;
    }

    /// <summary>
    /// Functionality of the Save Button: Bind the Values to the actual Item
    /// </summary>
    protected void SaveChanges()
    {
        if (_isChemical)
        {
            _createdChemicalItem.Name = Name;
            _createdChemicalItem.Shop = Shop;
            _createdChemicalItem.ItemNumber = ItemNumber;
            _createdChemicalItem.Note = Note;
            _createdChemicalItem.Cas = Cas;
            _createdChemicalItem.Price = Price;
            _createdChemicalItem.Purity = Purity;
        }
        else
        {
            _createdConsumableItem.Name = Name;
            _createdConsumableItem.Shop = Shop;
            _createdConsumableItem.ItemNumber = ItemNumber;
            _createdConsumableItem.Note = Note;
            _createdConsumableItem.Manufacturer = Manufacturer;
            _createdConsumableItem.SerialNumber = SerialNumber;
            _createdConsumableItem.Price = Price;
            _createdConsumableItem.Amount = ConsumableAmount;
        }
    }

}
