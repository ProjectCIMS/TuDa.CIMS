@using TuDa.CIMS.Shared.Entities
@using TuDa.CIMS.Shared.Entities.Enums

<MudDataGrid @ref="_dataGrid"
             T="AssetItem"
             ServerData="ServerReload"
             Filterable="true"
             FilterMode="@DataGridFilterMode.ColumnFilterRow"
             FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive">
    <ToolBarContent>
        <MudTextField T="string"
                      ValueChanged="@(s => OnSearch(s))"
                      Placeholder="Search"
                      Adornment="@Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search"
                      Clearable="true"
                      IconSize="@Size.Medium"
                      Class="mt-0"/>
        <MudSpacer/>
        <MudButton Color="@Color.Success"
                   Variant="Variant.Filled"
                   StartIcon="@Icons.Material.Filled.Add"
                   OnClick="@AddButtonPressed">Hinzufügen
        </MudButton>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="@(i => GetItemTypeName(i))"
                        Title="Typ">
            <FilterTemplate>
                <MudIconButton OnClick="@ToggleFilter" Icon="@_icon" Size="@Size.Small" />
                <MudOverlay Visible="@_filterOpen" OnClick="@(() => _filterOpen = false)" />
                <MudPopover Open="@_filterOpen" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter"
                            Style="width:200px">
                    <MudStack Spacing="0">
                        <MudStack Spacing="0" Style="overflow-y:auto;max-height:250px">
                            <MudCheckBox T="bool" Label="Chemikalien" Size="Size.Small"
                                         Value="@_selectedTypes.Contains(AssetItemType.Chemical)"
                                         ValueChanged="@((value) => SelectedChanged(value, AssetItemType.Chemical))" />

                            <MudCheckBox T="bool" Label="Laborgeräte" Size="Size.Small"
                                         Value="@_selectedTypes.Contains(AssetItemType.Consumable)"
                                         ValueChanged="@((value) => SelectedChanged(value, AssetItemType.Consumable))" />

                            <MudCheckBox T="bool" Label="Technische Gase" Size="Size.Small"
                                         Value="@_selectedTypes.Contains(AssetItemType.GasCylinder)"
                                         ValueChanged="@((value) => SelectedChanged(value, AssetItemType.GasCylinder))" />

                            <MudCheckBox T="bool" Label="Lösungsmittel" Size="Size.Small"
                                         Value="@_selectedTypes.Contains(AssetItemType.Solvent)"
                                         ValueChanged="@((value) => SelectedChanged(value, AssetItemType.Solvent))" />

                        </MudStack>
                        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.Center">
                            <MudButton OnClick="ToggleFilter">Schließen</MudButton>
                            <MudIconButton OnClick="Clear" Icon="@Icons.Material.Filled.Delete" />
                        </MudStack>
                    </MudStack>
                </MudPopover>
            </FilterTemplate>
            <CellTemplate>
                <MudIcon Icon="@GetItemTypeIcon(context.Item)"
                         Size="@Size.Medium"/>
                @GetItemTypeName(context.Item)
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="@(x => GetItemName(x))"
                        Title="Produkt"/>
        <PropertyColumn Property="@(x => x.ItemNumber)"
                        Title="Artikelnummer"/>
        <PropertyColumn Property="@(x => x.Shop)"
                        Title="Lieferant"/>
        <PropertyColumn Property="@(x => x.Room.Name)"
                        Title="Raum"/>
        <PropertyColumn Property="@(x => GetPriceText(x))"
                        SortBy="@(x => x.Price)"
                        Title="Preis">
        </PropertyColumn>
        <TemplateColumn>
            <CellTemplate>
                <MudIconButton Size="@Size.Medium"
                               Icon="@Icons.Material.Filled.Edit"
                               OnClick="_ => EditButtonPressed.InvokeAsync(context.Item)"/>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <PagerContent>
        <MudDataGridPager RowsPerPageString="Produkte pro Seite:"
                          T="AssetItem"/>
    </PagerContent>
</MudDataGrid>

@code {

    private static string GetItemTypeName(AssetItem assetItem) =>
        assetItem switch
        {
            Solvent => "Lösungsmittel",
            Chemical => "Chemikalie",
            Consumable => "Laborgerät",
            GasCylinder => "Technisches Gas",
            _ => "-",
        };

    private static string GetItemTypeIcon(AssetItem assetItem) =>
        assetItem switch
        {
            Solvent => Icons.Material.Filled.WaterDrop,
            Chemical => Icons.Material.Filled.Science,
            Consumable => Icons.Material.Filled.Inventory2,
            GasCylinder => Icons.Material.Filled.GasMeter,
            _ => Icons.Material.Filled.QuestionMark
        };

    private static string GetItemName(AssetItem assetItem) =>
        assetItem switch
        {
            Chemical chemical => $"{chemical.Name} ({chemical.Cas})",
            _ => assetItem.Name,
        };

    private static string GetPriceText(AssetItem assetItem) =>
        assetItem.Price.ToString("F")
        + " €/"
        + assetItem switch
        {
            Substance substance => substance.PriceUnit.ToAbbrevation(),
            _ => "Stück",
        };

}
