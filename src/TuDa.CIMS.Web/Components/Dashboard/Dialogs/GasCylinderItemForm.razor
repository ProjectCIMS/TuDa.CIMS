@using System.Globalization
@using TuDa.CIMS.Shared.Entities
@using TuDa.CIMS.Shared.Entities.Enums

@* Gas Cylinder Item Form *@

<MudForm>
    <MudTextField @bind-Value="FormCas"
                  Label="CAS"
                  Placeholder="CAS eingeben"
                  Variant="Variant.Filled"
                  FullWidth/>

    <MudTextField @bind-Value="FormPurity"
                  Label="Reinheit"
                  Placeholder="Reinheit eingeben"
                  Variant="Variant.Filled"
                  FullWidth/>

    <!-- MudSelect for selecting measurement unit -->
    <MudSelect @bind-Value="FormPriceUnit"
               Error="@IsError"
               ErrorText="Preiseinheit fehlt!"
               Label="Preis Einheit wählen"
               Variant="Variant.Filled"
               FullWidth>
        <MudSelectItem T="MeasurementUnits?" Value="null">-</MudSelectItem>
        <MudSelectItem T="MeasurementUnits?" Value="MeasurementUnits.Gram">Gramm</MudSelectItem>
        <MudSelectItem T="MeasurementUnits?" Value="MeasurementUnits.KiloGram">Kilogramm</MudSelectItem>
        <MudSelectItem T="MeasurementUnits?" Value="MeasurementUnits.MilliLiter">Milliliter</MudSelectItem>
        <MudSelectItem T="MeasurementUnits?" Value="MeasurementUnits.Liter">Liter</MudSelectItem>
        <MudSelectItem T="MeasurementUnits?" Value="MeasurementUnits.Piece">Stück</MudSelectItem>
    </MudSelect>

    <MudNumericField @bind-Value="FormVolume"
                     Label="Volume"
                     Culture="@_de"
                     T="double"
                     Placeholder="Volumen eingeben"
                     Variant="Variant.Filled"
                     FullWidth/>

    <MudNumericField @bind-Value="FormPressure"
                     Label="Pressure"
                     Culture="@_de"
                     T="double"
                     Placeholder="Druck eingeben"
                     Variant="Variant.Filled"
                     FullWidth/>
</MudForm>

@code
{
    private readonly CultureInfo _de = CultureInfo.GetCultureInfo("de-DE");
    /// <summary>
    /// Input Fields
    /// </summary>
    public double FormVolume { get; private set; }
    public double FormPressure { get; private set; }
    public MeasurementUnits? FormPriceUnit { get;  set; }
    public string FormCas { get;  set; } = string.Empty;
    public string FormPurity { get;  set; } = string.Empty;

    [Parameter] public bool FormShowError { get; set; }

    private bool IsError => FormPriceUnit == null && FormShowError;

    public void SetForm(GasCylinder item)
    {
        FormVolume = item.Volume;
        FormPressure = item.Pressure;
        FormCas = item.Cas;
        FormPurity = item.Purity;
        FormPriceUnit = item.PriceUnit;
    }

    /// <summary>
    /// Validate the Inputs
    /// </summary>
    /// <returns>returns false when all Inputs are valid otherwise true</returns>
    public bool ValidateForm()
    {
        if (FormVolume == 0.0
            || FormPressure == 0.0 || FormCas == string.Empty
            || FormPurity == string.Empty
           )
        {
            return true;
        }

        return false;
    }

    [Parameter] public EventCallback OnReset { get; set; }

    /// <summary>
    /// Resets the Input lines
    /// </summary>
    public void ResetInputs()
    {
        FormVolume = 0.0;
        FormPressure = 0.0;
        FormCas = string.Empty;
        FormPurity = string.Empty;
        OnReset.InvokeAsync();
    }

}
