@using TuDa.CIMS.Shared.Dtos.Responses
@using TuDa.CIMS.Shared.Entities
@using TuDa.CIMS.Shared.Entities.Enums
<MudPaper>
    <MudStack Spacing="2" Style="display: flex; flex-direction: column-reverse; overflow: auto; height: 400px;">
        @foreach (var purchaseEntry in Purchase.Entries)
        {
            <MudItem Class="p-2">
                <MudItem>
                    <MudText Typo="Typo.h6">@purchaseEntry.AssetItem.Name</MudText>
                </MudItem>
                <MudGrid>
                    <MudItem xs="4">@GetPricePerItemString(purchaseEntry)</MudItem>
                    <MudItem xs="4">@GetAmountString(purchaseEntry)</MudItem>
                    <MudItem xs="4">@GetTotalPriceString(purchaseEntry)</MudItem>
                </MudGrid>
            </MudItem>
        }
    </MudStack>
</MudPaper>

@code
{
    [CascadingParameter]
    public required PurchaseResponseDto Purchase { get; set; }

    private MarkupString GetPricePerItemString(PurchaseEntry purchaseEntry)
    {
        var temp = purchaseEntry.AssetItem switch
        {
            Substance substance => substance.PriceUnit.ToAbbrevation(),
            _ => "Stück"
        };
        return (MarkupString)$"Preis:<br>{purchaseEntry.PricePerItem:C}/{temp}";
    }

    private MarkupString GetTotalPriceString(PurchaseEntry purchaseEntry)
    {
        return (MarkupString)$"Endpreis:<br>{purchaseEntry.TotalPrice:C}";
    }

    private MarkupString GetAmountString(PurchaseEntry purchaseEntry)
    {
        var temp = purchaseEntry.AssetItem switch
        {
            Substance substance => substance.PriceUnit.ToAbbrevation(),
            _ => "Stück"
        };
        return (MarkupString)$"Menge:<br>{purchaseEntry.Amount} {temp}";
    }
}
