@using TuDa.CIMS.Shared.Entities

<!-- The Dialog for Amount Input -->
<MudDialog>
    <TitleContent>
        Amount Input
    </TitleContent>
    <DialogContent>
        <!-- Product View -->
        <MudGrid>
            <MudItem xs="12">
                <MudCard>
                    <MudCardContent>
                        <MudGrid>
                            <!-- Product Name -->
                            <MudItem xs="12">
                                <MudText Typo="Typo.subtitle1">@Product.Name</MudText>
                            </MudItem>
                            <!-- €/Unit -->
                            @if (Product is Substance substance)
                            {
                                <MudItem xs="12">
                                    <MudText Typo="Typo.subtitle2">@($"€/{substance.PriceUnit}")</MudText>
                                </MudItem>
                            }
                            else
                            {
                                <MudItem xs="12">
                                    <MudText Typo="Typo.subtitle2">@($"€/PerPiece")</MudText>
                                </MudItem>
                            }
                        </MudGrid>
                    </MudCardContent>
                </MudCard>
            </MudItem>
            <!-- Amount Input -->
            <MudItem xs="12">
                <MudTextField @bind-Value="Amount"
                              Label="Amount"
                              Min="1"
                              Type="number"/>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary"
                   OnClick="AddProduct">
            Add
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private MudDialogInstance _productDialog { get; set; }

    // Product to be shown in Dialog
    [Parameter] public AssetItem Product { get; set; }

    // Amount of Product
    [Parameter] public int Amount { get; set; }

    // Simple Functions to Submit and Cancel the Action
    private void Submit() => _productDialog.Close(DialogResult.Ok(Amount));
    private void Cancel() => _productDialog.Cancel();


    /// <summary>
    /// Method to add Product to Product List
    /// </summary>
    private void AddProduct()
    {
        // Logic to add the product goes here
        // For now, just close the dialog after clicking "Add"
        if (Amount > 0)
        {
            Console.WriteLine($"Product added with quantity: {Amount}");
            Submit();
        }
        else
        {
            Console.WriteLine("Quantity must be greater than 0");
        }
    }

}
